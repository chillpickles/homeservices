apiVersion: v1
kind: Namespace
metadata:
  name: unifi
  labels:
    name: unifi

---
apiVersion: v1
kind: Service
metadata:
  name: unifi-controller-tcp
  namespace: unifi
  annotations:
    metallb.universe.tf/IPaddress-pool: default
    metallb.universe.tf/allow-shared-ip: "unifi-controller"
  labels:
    app: unifi-controller
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: web-ui
  - name: https
    port: 443
    protocol: TCP
    targetPort: web-ui
  - name: controller
    port: 8080
    protocol: TCP
    targetPort: controller
  - name: web-ui
    port: 8443
    protocol: TCP
    targetPort: web-ui
  - name: portal-https
    port: 8843
    protocol: TCP
    targetPort: portal-https
  - name: portal-http
    port: 8880
    protocol: TCP
    targetPort: portal-http
  - name: mobile
    port: 6789
    protocol: TCP
    targetPort: mobile
  selector:
    app: unifi-controller
  # loadBalancerIP: 192.168.1.25
---
apiVersion: v1
kind: Service
metadata:
  name: unifi-controller-udp
  namespace: unifi
  annotations:
    metallb.universe.tf/IPaddress-pool: default
    metallb.universe.tf/allow-shared-ip: "unifi-controller"
  labels:
    app: unifi-controller
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - name: stun
    port: 3478
    protocol: UDP
    targetPort: web-ui
  - name: apdiscovery
    port: 10001
    protocol: UDP
    targetPort: web-ui
  - name: l2controller
    port: 1900
    protocol: UDP
    targetPort: web-ui
  - name: syslog
    port: 5514
    protocol: UDP
    targetPort: web-ui
  selector:
    app: unifi-controller
  # loadBalancerIP: 192.168.1.25
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: unifi-controller
  namespace: unifi
spec:
  selector:
    matchLabels:
      app: unifi-controller # has to match .spec.template.metadata.labels
  serviceName: "unifi-controller"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: unifi-controller # has to match .spec.selector.matchLabels
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 10
      containers:
      - name: unifi-controller
        image: lscr.io/linuxserver/unifi-controller:version-7.3.76
        imagePullPolicy: IfNotPresent
        ports:
        - name: stun
          containerPort: 3478
          protocol: UDP
        - name: apdiscovery
          containerPort: 10001
          protocol: UDP
        - name: l2controller
          containerPort: 1900
          protocol: UDP
        - name: syslog
          containerPort: 5514
          protocol: UDP
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        - name: controller
          containerPort: 8080
          protocol: TCP
        - name: web-ui
          containerPort: 8443
          protocol: TCP
        - name: portal-https
          containerPort: 8843
          protocol: TCP
        - name: mobile
          containerPort: 6789
          protocol: TCP
        - name: portal-http
          containerPort: 8880
          protocol: TCP
        volumeMounts:
        - name: unifi-controller
          mountPath: /config
  volumeClaimTemplates:
  - metadata:
      name: unifi-controller
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: local-storage
      resources:
        requests:
          storage: 15Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: unifi-controller
  namespace: unifi
spec:
  capacity:
    storage: 15Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /opt/unifi-controller
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - zmh-green-002